BOARD
[[['C',1,'B'],['C',1,'B'],['C',1,'B'],['C',1,'B'],['C',1,'W']],[['C',1,'W'],['B',1,'B'],['B',1,'B'],['B',1,'B'],['B',1,'W'],['C',1,'W']],
[['C',1,'W'],['B',1,'W'],['A',1,'B'],['A',1,'B'],['A',1,'W'],['B',1,'W'],['C',1,'W']],[['C',1,'W'],['B',1,'W'],['A',1,'W'],['C',1,'B'],['C',1,'W'],['A',1,'W'],['B',1,'W'],['C',1,'W']],[['C',1,'W'],['B',1,'W'],['A',1,'W'],['C',1,'W'],['C',1,'B'],['A',1,'B'],['B',1,'B'],['C',1,'B']],[['C',1,'B'],['B',1,'B'],['A',1,'B'],['C',1,'B'],['C',1,'W'],['A',1,'B'],['B',1,'B'],['C',1,'B']],[['C',1,'B'],['B',1,'B'],['A',1,'B'],['A',1,'W'],['A',1,'W'],['B',1,'B'],['C',1,'B']],[['C',1,'B'],['B',1,'B'],['B',1,'W'],['B',1,'W'],['B',1,'W'],['C',1,'B']],
[['C',1,'B'],['C',1,'W'],['C',1,'W'],['C',1,'W'],['C',1,'W']],['@info',1,1,['3']]]


BOARD AFTER CORRECTING POSITIONING
[[['C',1,'W'],['C',1,'W'],['C',1,'W'],['C',1,'W'],['C',1,'B']],[['C',1,'B'],['B',1,'W'],['B',1,'W'],['B',1,'W'],['B',1,'B'],['C',1,'B']],[['C',1,'B'],['B',1,'B'],['A',1,'W'],['A',1,'W'],['A',1,'B'],['B',1,'B'],['C',1,'B']],[['C',1,'B'],['B',1,'B'],['A',1,'B'],['C',1,'W'],['C',1,'B'],['A',1,'B'],['B',1,'B'],['C',1,'B']],[['C',1,'B'],['B',1,'B'],['A',1,'B'],['C',1,'B'],['C',1,'W'],['A',1,'W'],['B',1,'W'],['C',1,'W']],[['C',1,'W'],['B',1,'W'],['A',1,'W'],['C',1,'W'],['C',1,'B'],['A',1,'W'],['B',1,'W'],['C',1,'W']],[['C',1,'W'],['B',1,'W'],['A',1,'W'],['A',1,'B'],['A',1,'B'],['B',1,'W'],['C',1,'W']],[['C',1,'W'],['B',1,'W'],['B',1,'B'],['B',1,'B'],['B',1,'B'],['C',1,'W']],[['C',1,'W'],['C',1,'B'],['C',1,'B'],['C',1,'B'],['C',1,'B']],['@info',1,1,['1']]]


[[['C',1,'W'],['C',1,'W'],['C',1,'W'],['C',1,'W'],['C',1,'B']],
[['C',1,'B'],['B',1,'W'],['B',1,'W'],['B',1,'W'],['B',1,'B'],['C',1,'B']],
[['C',1,'B'],['B',1,'B'],['A',1,'W'],['A',1,'W'],['A',1,'B'],['B',1,'B'],['C',1,'B']],
[['C',1,'B'],['B',1,'B'],['A',1,'B'],['C',1,'W'],['C',1,'B'],['A',1,'B'],['B',1,'B'],['C',1,'B']],
[['C',1,'B'],['B',1,'B'],['A',1,'B'],['C',1,'B'],['C',1,'W'],['A',1,'W'],['B',1,'W'],['C',1,'W']],
[['C',1,'W'],['B',1,'W'],['A',1,'W'],['C',1,'W'],['C',1,'B'],['A',1,'W'],['B',1,'W'],['C',1,'W']],
[['C',1,'W'],['B',1,'W'],['A',1,'W'],['A',1,'B'],['A',1,'B'],['B',1,'W'],['C',1,'W']],
[['C',1,'W'],['B',1,'W'],['B',1,'B'],['B',1,'B'],['B',1,'B'],['C',1,'W']],
[['C',1,'W'],['C',1,'B'],['C',1,'B'],['C',1,'B'],['C',1,'B']]



chooseMove2(Mode,Board,NextBoard,SelectedMove,Result)
chooseMove2('3',[[['C',1,'B'],['C',1,'B'],['C',1,'B'],['C',1,'B'],['C',1,'W']],[['C',1,'W'],['B',1,'B'],['B',1,'B'],['B',1,'B'],['B',1,'W'],['C',1,'W']],[['C',1,'W'],['B',1,'W'],['A',1,'B'],['A',1,'B'],['A',1,'W'],['B',1,'W'],['C',1,'W']],[['C',1,'W'],['B',1,'W'],['A',1,'W'],['C',1,'B'],['C',1,'W'],['A',1,'W'],['B',1,'W'],['C',1,'W']],[['C',1,'W'],['B',1,'W'],['A',1,'W'],['C',1,'W'],['C',1,'B'],['A',1,'B'],['B',1,'B'],['C',1,'B']],[['C',1,'B'],['B',1,'B'],['A',1,'B'],['C',1,'B'],['C',1,'W'],['A',1,'B'],['B',1,'B'],['C',1,'B']],[['C',1,'B'],['B',1,'B'],['A',1,'B'],['A',1,'W'],['A',1,'W'],['B',1,'B'],['C',1,'B']],[['C',1,'B'],['B',1,'B'],['B',1,'W'],['B',1,'W'],['B',1,'W'],['C',1,'B']],[['C',1,'B'],['C',1,'W'],['C',1,'W'],['C',1,'W'],['C',1,'W']],['@info',1,1,['3']]],NextBoard,SelectedMove,Result).



gameOver(Board,Winner)
gameOver([[['C',1,'B'],['C',1,'B'],['C',1,'B'],['C',1,'B'],['C',1,'W']],[['C',1,'W'],['B',1,'B'],['B',1,'B'],['B',1,'B'],['B',1,'W'],['C',1,'W']],[['C',1,'W'],['B',1,'W'],['A',1,'B'],['A',1,'B'],['A',1,'W'],['B',1,'W'],['C',1,'W']],[['C',1,'W'],['B',1,'W'],['A',1,'W'],['C',1,'B'],['C',1,'W'],['A',1,'W'],['B',1,'W'],['C',1,'W']],[['C',1,'W'],['B',1,'W'],['A',1,'W'],['C',1,'W'],['C',1,'B'],['A',1,'B'],['B',1,'B'],['C',1,'B']],[['C',1,'B'],['B',1,'B'],['A',1,'B'],['C',1,'B'],['C',1,'W'],['A',1,'B'],['B',1,'B'],['C',1,'B']],[['C',1,'B'],['B',1,'B'],['A',1,'B'],['A',1,'W'],['A',1,'W'],['B',1,'B'],['C',1,'B']],[['C',1,'B'],['B',1,'B'],['B',1,'W'],['B',1,'W'],['B',1,'W'],['C',1,'B']],[['C',1,'B'],['C',1,'W'],['C',1,'W'],['C',1,'W'],['C',1,'W']],['@info',1,1,['3']]], Winner).
"no."
gameOver([[['C',1,'B'],['C',1,'B'],['C',1,'B'],['C',1,'B'],['C',1,'W']],[['C',1,'W'],['B',1,'B'],['B',1,'B'],['B',1,'B'],['B',1,'W'],['C',1,'W']],[['C',1,'W'],['B',1,'W'],['A',1,'B'],['A',1,'B'],[*],['B',1,'W'],['C',1,'W']],[['C',1,'W'],['B',1,'W'],[*],['C',1,'B'],['C',1,'W'],[*],['B',1,'W'],['C',1,'W']],[['C',1,'W'],['B',1,'W'],[*],['C',1,'W'],['C',1,'B'],['A',1,'B'],['B',1,'B'],['C',1,'B']],[['C',1,'B'],['B',1,'B'],['A',1,'B'],['C',1,'B'],['C',1,'W'],['A',1,'B'],['B',1,'B'],['C',1,'B']],[['C',1,'B'],['B',1,'B'],['A',1,'B'],[*],[*],['B',1,'B'],['C',1,'B']],[['C',1,'B'],['B',1,'B'],['B',1,'W'],['B',1,'W'],['B',1,'W'],['C',1,'B']],[['C',1,'B'],['C',1,'W'],['C',1,'W'],['C',1,'W'],['C',1,'W']],['@info',1,1,['3']]], Winner).
"B."

gameOver([[['C',1,'B'],['C',1,'B'],['C',1,'B'],['C',1,'B'],['C',1,'W']],[['C',1,'W'],['B',1,'B'],['B',1,'B'],['B',1,'B'],['B',1,'W'],['C',1,'W']],[['C',1,'W'],['B',1,'W'],[*],[*],['A',1,'W'],['B',1,'W'],['C',1,'W']],[['C',1,'W'],['B',1,'W'],['A',1,'W'],['C',1,'B'],['C',1,'W'],['A',1,'W'],['B',1,'W'],['C',1,'W']],[['C',1,'W'],['B',1,'W'],['A',1,'W'],['C',1,'W'],['C',1,'B'],[*],['B',1,'B'],['C',1,'B']],[['C',1,'B'],['B',1,'B'],[*],['C',1,'B'],['C',1,'W'],[*],['B',1,'B'],['C',1,'B']],[['C',1,'B'],['B',1,'B'],[*],['A',1,'W'],['A',1,'W'],['B',1,'B'],['C',1,'B']],[['C',1,'B'],['B',1,'B'],['B',1,'W'],['B',1,'W'],['B',1,'W'],['C',1,'B']],[['C',1,'B'],['C',1,'W'],['C',1,'W'],['C',1,'W'],['C',1,'W']],['@info',1,1,['3']]], Winner).
"




goodMoveForPhase(Tab,Xi,Yi,Xf,Yf,Phase)
goodMoveForPhase([[['C',1,'W'],['C',1,'W'],['C',1,'W'],['C',1,'W'],['C',1,'B']],[['C',1,'B'],['B',1,'W'],['B',1,'W'],['B',1,'W'],['B',1,'B'],['C',1,'B']],[['C',1,'B'],['B',1,'B'],['A',1,'W'],['A',1,'W'],['A',1,'B'],['B',1,'B'],['C',1,'B']],[['C',1,'B'],['B',1,'B'],['A',1,'B'],['C',1,'W'],['C',1,'B'],['A',1,'B'],['B',1,'B'],['C',1,'B']],[['C',1,'B'],['B',1,'B'],['A',1,'B'],['C',1,'B'],['C',1,'W'],['A',1,'W'],['B',1,'W'],['C',1,'W']],[['C',1,'W'],['B',1,'W'],['A',1,'W'],['C',1,'W'],['C',1,'B'],['A',1,'W'],['B',1,'W'],['C',1,'W']],[['C',1,'W'],['B',1,'W'],['A',1,'W'],['A',1,'B'],['A',1,'B'],['B',1,'W'],['C',1,'W']],[['C',1,'W'],['B',1,'W'],['B',1,'B'],['B',1,'B'],['B',1,'B'],['C',1,'W']],[['C',1,'W'],['C',1,'B'],['C',1,'B'],['C',1,'B'],['C',1,'B']],['@info',1,1,['3']]],8,4,7,3,1).


goodMoveForPhase([[['C',1,'W'],['C',1,'W'],['C',1,'W'],['C',1,'W'],['C',1,'B']],[['C',1,'B'],['B',1,'W'],['B',1,'W'],['B',1,'W'],['B',1,'B'],['C',1,'B']],[['C',1,'B'],['B',1,'B'],['A',1,'W'],['A',1,'W'],['A',1,'B'],['B',1,'B'],['C',1,'B']],[['C',1,'B'],['B',1,'B'],['A',1,'B'],['C',1,'W'],['C',1,'B'],['A',1,'B'],['B',1,'B'],['C',1,'B']],[['C',1,'B'],['B',1,'B'],['A',1,'B'],['C',1,'B'],['C',1,'W'],['A',1,'W'],['B',1,'W'],['C',1,'W']],[['C',1,'W'],['B',1,'W'],['A',1,'W'],['C',1,'W'],['C',1,'B'],['A',1,'W'],['B',1,'W'],['C',1,'W']],[['C',1,'W'],['B',1,'W'],['A',1,'W'],['A',1,'B'],['A',1,'B'],['B',1,'W'],['C',1,'W']],[['C',1,'W'],['B',1,'W'],['B',1,'B'],['B',1,'B'],['B',1,'B'],['C',1,'W']],[['C',1,'W'],['C',1,'B'],['C',1,'B'],['C',1,'B'],['C',1,'B']],['@info',1,1,['3']]],3,0,4,0,1).



void LG_Tzaar::undoButtonClicked(){
	if (!(this->mode == computer_vs_computer))		//guarantee that exists a player
	{

		int lastPlayedIndex = memorizedPlays.size() - 1;

		if (this->mode == player_vs_computer)
		{
			while (lastPlayedIndex>=0){
				if (memorizedPlays.at(lastPlayedIndex).getFrom()->piece->getColor() != White)
				{
					doUndo(memorizedPlays.at(lastPlayedIndex));
					memorizedPlays.pop_back();
					lastPlayedIndex--;
				}
				else{
					doUndo(memorizedPlays.at(lastPlayedIndex));
					memorizedPlays.pop_back();
					lastPlayedIndex--;
					break;
				}			
			}
		}
		else if (lastPlayedIndex >= 0 &&  this->mode == player_vs_player)
		{
			doUndo(memorizedPlays.at(lastPlayedIndex));
			memorizedPlays.pop_back();
		}

		
	}
}